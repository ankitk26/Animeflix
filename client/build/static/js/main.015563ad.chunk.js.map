{"version":3,"sources":["assets/images/spinner.svg","components/animeInfo/AnimeInfoLower.js","components/animeInfo/AnimeInfoUpper.js","components/AnimeInfo.js","layouts/Spinner.js","queries/queries.js","pages/Anime.js","components/AnimeItem.js","pages/DisplayAnimesList.js","pages/GenreAnimes.js","layouts/Header.js","pages/SearchResults.js","App.js","index.js"],"names":["module","exports","AnimeInfoLower","anime","synopsis","recommendations","characters","className","map","character","key","mal_id","src","image_url","alt","name","slice","recommendation","to","title","AnimeInfoUpper","episodes","title_english","score","premiered","genres","type","rating","duration","aired","genre","from","AnimeInfo","Spinner","spinner","style","width","textAlign","margin","display","justifyContent","gql","require","TOP_ANIMES","GET_ANIME","GET_ANIMES_BY_GENRE","SEARCH_ANIMES","FETCH_UPCOMING","Anime","props","id","match","params","useQuery","variables","parseInt","loading","error","data","AnimeItem","Home","topAnimes","upcoming","GenreAnimes","useState","showMore","setShowMore","genreId","mal_url","onClick","Header","search","setSearch","history","useHistory","onSubmit","e","preventDefault","push","htmlFor","value","onChange","target","placeholder","color","SearchResults","query","client","ApolloClient","uri","cache","InMemoryCache","App","exact","path","render","DisplayAnimesList","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.015563ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.a4ec69f7.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AnimeInfoLower = ({ anime }) => {\r\n  const { synopsis, recommendations, characters } = anime;\r\n\r\n  return (\r\n    <div className=\"anime_info_lower\">\r\n      <div className=\"anime_synopsis\">\r\n        <h2>Synopsis</h2>\r\n        <p className=\"anime_synopsis\">{synopsis}</p>\r\n      </div>\r\n      <hr />\r\n      <div className=\"anime_characters_wrapper\">\r\n        <h2>Characters</h2>\r\n        <div className=\"anime_characters\">\r\n          {characters.map((character) => (\r\n            <div key={character.mal_id} className=\"anime_character\">\r\n              <img src={character.image_url} alt={character.name} className=\"character_image\" />\r\n              <span>{character.name}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"anime_recommendations_wrapper\">\r\n        <h2>More Anime TV and Movies</h2>\r\n        <div className=\"anime_recommendations\">\r\n          {recommendations.slice(0, 20).map((recommendation) => (\r\n            <div key={recommendation.image_url} className=\"anime_item_wrapper\">\r\n              <Link to={`/anime/${recommendation.mal_id}`} className=\"anime_item_main\">\r\n                <div className=\"anime_image\">\r\n                  <img src={recommendation.image_url} alt={recommendation.title} />\r\n                </div>\r\n                <span>{recommendation.title}</span>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimeInfoLower;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AnimeInfoUpper = ({ anime }) => {\r\n  const { title, image_url, episodes, title_english, score, premiered, genres, type, rating, duration, aired } = anime;\r\n\r\n  return (\r\n    <div className=\"anime_info_upper\">\r\n      {/* Anime Image */}\r\n      <div className=\"anime_info_image_wrapper\">\r\n        <img src={image_url} alt={title} className=\"anime_info_image\" />\r\n      </div>\r\n      {/* Anime Info */}\r\n      <div>\r\n        <h1>{title}</h1>\r\n        {title_english !== title && <p className=\"english_title\">{title_english}</p>}\r\n        {/* Anime genres */}\r\n        <div className=\"anime_genre\">\r\n          {genres.map((genre) => (\r\n            <Link to={`/animes/genre/${genre.mal_id}`} key={genre.mal_id}>\r\n              <span>{genre.name}</span>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n        {/* Anime Stats */}\r\n        <div className=\"anime_info_stats\">\r\n          <div>\r\n            <i className=\"fas fa-film fa-2x\"></i>\r\n            <p className=\"light\">Episodes</p>\r\n            <p>{episodes}</p>\r\n          </div>\r\n          <div>\r\n            <i className=\"fas fa-star fa-2x\"></i>\r\n            <p className=\"light\">Score</p>\r\n            <p>{score}</p>\r\n          </div>\r\n          {type === \"TV\" && (\r\n            <div>\r\n              <i className=\"fas fa-calendar fa-2x\"></i>\r\n              <p className=\"light\">Premiered</p>\r\n              <p>{premiered}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"anime_other_info\">\r\n          <div>\r\n            Type: <span>{type}</span>\r\n          </div>\r\n          <div>\r\n            Rating: <span>{rating}</span>\r\n          </div>\r\n          <div>\r\n            Duration: <span>{duration}</span>\r\n          </div>\r\n          {aired.from !== null && (\r\n            <div>\r\n              Release Date: <span>{aired.from}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimeInfoUpper;\r\n","import React from \"react\";\r\nimport AnimeInfoLower from \"./animeInfo/AnimeInfoLower\";\r\nimport AnimeInfoUpper from \"./animeInfo/AnimeInfoUpper\";\r\n\r\nconst AnimeInfo = ({ anime }) => {\r\n  return (\r\n    <div className=\"anime_info_wrapper\">\r\n      <AnimeInfoUpper anime={anime} />\r\n      <AnimeInfoLower anime={anime} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimeInfo;\r\n","import React from \"react\";\r\nimport spinner from \"../assets/images/spinner.svg\";\r\n\r\nconst Spinner = () => {\r\n  const spinnerStyle = {\r\n    width: \"50px\",\r\n    textAlign: \"center\",\r\n    margin: \"2rem auto\",\r\n    display: \"grid\",\r\n    justifyContent: \"center\",\r\n  };\r\n  return (\r\n    <>\r\n      <img src={spinner} alt=\"Loading...\" style={spinnerStyle} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","const { gql } = require(\"@apollo/client\");\r\n\r\nexport const TOP_ANIMES = gql`\r\n  query TopAnimesQuery {\r\n    topAnimes {\r\n      mal_id\r\n      image_url\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ANIME = gql`\r\n  query GetAnimeQuery($id: Int!) {\r\n    anime(id: $id) {\r\n      mal_id\r\n      image_url\r\n      trailer_url\r\n      episodes\r\n      title\r\n      title_english\r\n      duration\r\n      rating\r\n      synopsis\r\n      type\r\n      premiered\r\n      aired {\r\n        from\r\n      }\r\n      score\r\n      genres {\r\n        mal_id\r\n        name\r\n      }\r\n      characters {\r\n        mal_id\r\n        image_url\r\n        name\r\n      }\r\n      recommendations {\r\n        mal_id\r\n        image_url\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ANIMES_BY_GENRE = gql`\r\n  query GetAnimesByGenreQuery($id: Int!) {\r\n    genre(id: $id) {\r\n      mal_url {\r\n        name\r\n      }\r\n      anime {\r\n        mal_id\r\n        title\r\n        image_url\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SEARCH_ANIMES = gql`\r\n  query SearchAnimesQuery($search: String!) {\r\n    search(query: $search) {\r\n      mal_id\r\n      image_url\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FETCH_UPCOMING = gql`\r\n  query FetchUpcomingQuery {\r\n    upcoming {\r\n      mal_id\r\n      image_url\r\n      title\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport AnimeInfo from \"../components/AnimeInfo\";\r\nimport Spinner from \"../layouts/Spinner\";\r\nimport { GET_ANIME } from \"../queries/queries\";\r\n\r\nconst Anime = (props) => {\r\n  const id = props.match.params.id;\r\n  const { loading, error, data } = useQuery(GET_ANIME, { variables: { id: parseInt(id) } });\r\n\r\n  return (\r\n    <div>\r\n      {error && <p>Error ! Please check your interent connection</p>}\r\n      {loading ? <Spinner /> : <AnimeInfo anime={data.anime} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Anime;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AnimeItem = ({ anime }) => {\r\n  return (\r\n    <div className=\"anime_item_wrapper\">\r\n      <Link to={`/anime/${anime.mal_id}`} className=\"anime_item_main\">\r\n        <div className=\"anime_image\">\r\n          <img src={anime.image_url} alt={anime.title} />\r\n        </div>\r\n        <span>{anime.title}</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimeItem;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport AnimeItem from \"../components/AnimeItem\";\r\nimport Spinner from \"../layouts/Spinner\";\r\nimport { FETCH_UPCOMING, TOP_ANIMES } from \"../queries/queries\";\r\n\r\nconst Home = ({ type }) => {\r\n  const { loading, error, data } = useQuery(type === \"topRated\" ? TOP_ANIMES : FETCH_UPCOMING);\r\n\r\n  return (\r\n    <div className=\"top_animes_section\">\r\n      <h1>{type === \"topRated\" ? \"Top Rated Animes\" : \"Upcoming Animes\"}</h1>\r\n      {error && <p>Error ! Try refreshing page</p>}\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"top_animes_list\">\r\n          {type === \"topRated\"\r\n            ? data.topAnimes.map((anime) => <AnimeItem key={anime.mal_id} anime={anime} />)\r\n            : data.upcoming.map((anime) => <AnimeItem key={anime.mal_id} anime={anime} />)}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_ANIMES_BY_GENRE } from \"../queries/queries\";\r\nimport Spinner from \"../layouts/Spinner\";\r\nimport AnimeItem from \"../components/AnimeItem\";\r\n\r\nconst GenreAnimes = (props) => {\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  const genreId = props.match.params.id;\r\n  const { loading, error, data } = useQuery(GET_ANIMES_BY_GENRE, { variables: { id: parseInt(genreId) } });\r\n  return (\r\n    <div className=\"top_animes_section\">\r\n      {error && <p>Error ! Try refreshing page</p>}\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <>\r\n          <h1>{data.genre.mal_url.name}</h1>\r\n          <div className=\"top_animes_list\">\r\n            {data.genre.anime.slice(0, 50).map((anime) => (\r\n              <AnimeItem key={anime.mal_id} anime={anime} />\r\n            ))}\r\n          </div>\r\n          <div className=\"show_btn_wrapper\">\r\n            <button\r\n              onClick={() => setShowMore(true)}\r\n              style={{ display: showMore ? \"none\" : \"block\" }}\r\n              className=\"show_more_btn\"\r\n            >\r\n              LOAD MORE\r\n            </button>\r\n          </div>\r\n          <div className=\"top_animes_list\">\r\n            {showMore && data.genre.anime.slice(50, 100).map((anime) => <AnimeItem key={anime.mal_id} anime={anime} />)}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenreAnimes;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    history.push(`/search/${search}`);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div>\r\n        <Link to=\"/\">\r\n          <h1>\r\n            <span>A</span>NIMEFLI<span>X</span>\r\n          </h1>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <Link to=\"/upcoming\">\r\n            <div className=\"upcoming_heading\">Upcoming Animes</div>\r\n          </Link>\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"search\"></label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"search\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            placeholder=\"Search Anime TV or Movie\"\r\n          />\r\n          <button className=\"search_btn\">\r\n            <i className=\"fas fa-search fa-2x\" style={{ color: \"#ddd\" }}></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport AnimeItem from \"../components/AnimeItem\";\r\nimport Spinner from \"../layouts/Spinner\";\r\nimport { SEARCH_ANIMES } from \"../queries/queries\";\r\n\r\nconst SearchResults = (props) => {\r\n  const query = props.match.params.query;\r\n  const { loading, error, data } = useQuery(SEARCH_ANIMES, { variables: { search: query } });\r\n\r\n  return (\r\n    <div className=\"top_animes_section\">\r\n      <h1>Search Results for \"{query}\"</h1>\r\n      {error && <p>Error ! Try refreshing page</p>}\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"top_animes_list\">\r\n          {data.search.map((anime) => (\r\n            <AnimeItem key={anime.mal_id} anime={anime} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport \"./assets/css/source.css\";\nimport Anime from \"./pages/Anime\";\nimport DisplayAnimesList from \"./pages/DisplayAnimesList\";\nimport GenreAnimes from \"./pages/GenreAnimes\";\nimport Header from \"./layouts/Header\";\nimport SearchResults from \"./pages/SearchResults\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  cache: new InMemoryCache(),\n});\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" render={(props) => <DisplayAnimesList type=\"topRated\" {...props} />} />\n          <Route path=\"/animes/genre/:id\" component={GenreAnimes} />\n          <Route path=\"/anime/:id\" component={Anime} />\n          <Route path=\"/search/:query\" component={SearchResults} />\n          <Route path=\"/upcoming\" render={(props) => <DisplayAnimesList type=\"upcoming\" {...props} />} />\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}